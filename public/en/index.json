[{
        "title": "Archives",
        "permalink": "/en/archives/",
        "summary": "",
        "content": "",
        "tags": null,
        "categories": ["archives"],
        "lang": "en"
    },{
        "title": "How to Create JWT Tokens for using App Store Connect API?",
        "permalink": "/en/blog/how-to-create-jwt-token-using-app-store-connect-api/",
        "summary": "Hello everyone! Welcome to the first article about App Store Connect API. In this first article, I am going to give a brief explanation of App Store Connect API and how to create JWT tokens for the API.",
        "content": "\nHello everyone! Welcome to the first article about App Store Connect API. In this first article, I am going to give a brief explanation of App Store Connect API and how to create JWT tokens for the API.\nWhat is App Store Connect API? The App Store Connect API is a REST API that enables the automation of actions you take in App Store Connect. This API empowers developers to seamlessly handle various tasks, from app submission and updates to managing in-app purchases, monitoring app performance and user engagement through comprehensive reports, responding to customer reviews and feedback effectively, and many more.\nWhy JWT Token? Without a token, you won\u0026rsquo;t be able to get the response from the App Store Connect API but mainly API requires JSON Web Token (JWT) for authentication and authorization purposes. In the context of the API, the JWT token serves as a secure and standardized method to verify the identity of the client and to ensure that it has the necessary permissions to access the requested resources.\nHow to Create a JWT Token? Before creating JWT tokens for using the App Store Connect API we need a few steps to setup.\nGenerate API Key from App Store Connect GUI\nDownload the private key in the p8 format\nCopy your Issuer ID and API Key ID\nGenerate API Key To generate an API key, we have to log in to the App Store Connect web interface with our account and go to the Users and Access tab. On the page click Keys. To be able to see the Keys tab your account has to have permission. We can create an API key for a specific purpose or an admin API key that can access all the App Store Connect API.\nClick the plus icon next to the \u0026lsquo;active\u0026rsquo; text type a name for the key choose the roles that can access to key from the modal and click \u0026lsquo;Generate\u0026rsquo;. After that key will be created and listed.\nDownload Private Key Once the API Key is generated we will download the Private Key. The key is usually in the .p8 format. Some somethings are important to keep in mind whilst dealing with the private key.\nThe private key can be downloaded only once. Make sure to keep it secure once downloaded.\nThe private key never expires and is used to work as long as it\u0026rsquo;s valid even if it\u0026rsquo;s compromised so if you think that your key is not safe anymore, revoke it from App Store Connect as soon as possible and get a new key.\nCopy Your Issuer and API Key ID The last step before creating the JTW token is copying your issuer ID and API key ID which you can find on the Users\u0026amp;Access page.\nCreate JWT Token As mentioned earlier, JWT is used to generate the token that has been used by the App Store Connect API. The process of creating a token requires the following steps:\nIssuerID: The ID copied from the User\u0026amp;Access page.\nPrivate Key: Key downloaded in .p8 format.\nExpiration Time: 20 min maximum, the token cannot be valid for more than 20 minutes so we have to make sure that, we will create a new token before it expires.\nAudience: This is constant with API version value usually \u0026lsquo;applestoreconnect-v1\u0026rsquo;\nAlgorithm: The JWT algorithm required to create tokens e.g ES256\nOnce we have all the necessary details, we will be able to create a JWT token using the desired language. I am going to use Node.js for this process.\nRun these commands in order:\nmkdir appStoreToken cd appStoreToken npm init -y npm i jsonwebtoken touch index.js Paste this code into your index.js file, replace the necessary information with your information, and save.\nconst fs = require(\u0026#34;fs\u0026#34;); const jwt = require(\u0026#34;jsonwebtoken\u0026#34;); const privateKey = fs.readFileSync(\u0026#34;yourPrivateKey.p8\u0026#34;); const apiKeyId = \u0026#34;Your API Key ID\u0026#34;; const issuerId = \u0026#34;Your Issuer ID\u0026#34;; let now = Math.round(new Date().getTime() / 1000); // Notice the /1000 let nowPlus20 = now + 1199; // 1200 === 20 minutes let payload = { iss: issuerId, exp: nowPlus20, aud: \u0026#34;appstoreconnect-v1\u0026#34;, }; let signOptions = { algorithm: \u0026#34;ES256\u0026#34;, header: { alg: \u0026#34;ES256\u0026#34;, kid: apiKeyId, typ: \u0026#34;JWT\u0026#34;, }, }; let token = jwt.sign(payload, privateKey, signOptions); console.log(\u0026#34;@token: \u0026#34;, token); and lastly, run the command below.\nnode index.js This will return a long token that we can use to access an App Store Connect API, we also need to create another token if we want to continue using API after 20 minutes.\nConclusion In this post, you learned how the create a JWT token for the App Store Connect API using Node.js. This is a critical step in authenticating your requests to the API. In future posts, I will try to explore the other ways you can use the App Store Connect API. Thank you for your reading.\nRead this article in Turkish\n",
        "tags": ["jwt","app-store","api"],
        "categories": ["Development","iOS"],
        "lang": "en"
    },{
        "title": "",
        "permalink": "/en/about/",
        "summary": "\u003cp\u003eI graduated in Computer Engineering with both a bachelor\u0026rsquo;s and master\u0026rsquo;s degree. Over the past 5 years in the tech industry, I\u0026rsquo;ve worked in various sectors, including travel and finance. However, my primary focus has been on AI chatbot projects. I spent 2.5 years as a business analyst and the rest as a software developer, refining my skills and expertise in this specialized field. Currently, I am thrilled to be a software developer at Juphy, contributing to exciting and innovative technology projects, particularly in the realm of AI chatbots.\u003c/p\u003e",
        "content": "I graduated in Computer Engineering with both a bachelor\u0026rsquo;s and master\u0026rsquo;s degree. Over the past 5 years in the tech industry, I\u0026rsquo;ve worked in various sectors, including travel and finance. However, my primary focus has been on AI chatbot projects. I spent 2.5 years as a business analyst and the rest as a software developer, refining my skills and expertise in this specialized field. Currently, I am thrilled to be a software developer at Juphy, contributing to exciting and innovative technology projects, particularly in the realm of AI chatbots.\n",
        "tags": null,
        "categories": null,
        "lang": "en"
    }]

